/**
 * Autogenerated by Avro
 *
 * <p>DO NOT EDIT DIRECTLY
 */
package ionutbalosin.training.ecommerce.order.schema;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class OrderCreatedEvent extends org.apache.avro.specific.SpecificRecordBase
    implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -475732331924454747L;
  public static final org.apache.avro.Schema SCHEMA$ =
      new org.apache.avro.Schema.Parser()
          .parse(
              "{\"type\":\"record\",\"name\":\"OrderCreatedEvent\",\"namespace\":\"ionutbalosin.training.ecommerce.order.schema\",\"fields\":[{\"name\":\"userId\",\"type\":\"int\"},{\"name\":\"productId\",\"type\":\"int\"}]}");

  public static org.apache.avro.Schema getClassSchema() {
    return SCHEMA$;
  }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<OrderCreatedEvent> ENCODER =
      new BinaryMessageEncoder<OrderCreatedEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OrderCreatedEvent> DECODER =
      new BinaryMessageDecoder<OrderCreatedEvent>(MODEL$, SCHEMA$);

  /** Return the BinaryMessageDecoder instance used by this class. */
  public static BinaryMessageDecoder<OrderCreatedEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link
   * SchemaStore}.
   *
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<OrderCreatedEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<OrderCreatedEvent>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this OrderCreatedEvent to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a OrderCreatedEvent from a ByteBuffer. */
  public static OrderCreatedEvent fromByteBuffer(java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public int userId;
  @Deprecated public int productId;

  /**
   * Default constructor. Note that this does not initialize fields to their default values from the
   * schema. If that is desired then one should use <code>newBuilder()</code>.
   */
  public OrderCreatedEvent() {}

  /**
   * All-args constructor.
   *
   * @param userId The new value for userId
   * @param productId The new value for productId
   */
  public OrderCreatedEvent(java.lang.Integer userId, java.lang.Integer productId) {
    this.userId = userId;
    this.productId = productId;
  }

  public org.apache.avro.Schema getSchema() {
    return SCHEMA$;
  }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
      case 0:
        return userId;
      case 1:
        return productId;
      default:
        throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value = "unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
      case 0:
        userId = (java.lang.Integer) value$;
        break;
      case 1:
        productId = (java.lang.Integer) value$;
        break;
      default:
        throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'userId' field.
   *
   * @return The value of the 'userId' field.
   */
  public java.lang.Integer getUserId() {
    return userId;
  }

  /**
   * Sets the value of the 'userId' field.
   *
   * @param value the value to set.
   */
  public void setUserId(java.lang.Integer value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'productId' field.
   *
   * @return The value of the 'productId' field.
   */
  public java.lang.Integer getProductId() {
    return productId;
  }

  /**
   * Sets the value of the 'productId' field.
   *
   * @param value the value to set.
   */
  public void setProductId(java.lang.Integer value) {
    this.productId = value;
  }

  /**
   * Creates a new OrderCreatedEvent RecordBuilder.
   *
   * @return A new OrderCreatedEvent RecordBuilder
   */
  public static ionutbalosin.training.ecommerce.order.schema.OrderCreatedEvent.Builder
      newBuilder() {
    return new ionutbalosin.training.ecommerce.order.schema.OrderCreatedEvent.Builder();
  }

  /**
   * Creates a new OrderCreatedEvent RecordBuilder by copying an existing Builder.
   *
   * @param other The existing builder to copy.
   * @return A new OrderCreatedEvent RecordBuilder
   */
  public static ionutbalosin.training.ecommerce.order.schema.OrderCreatedEvent.Builder newBuilder(
      ionutbalosin.training.ecommerce.order.schema.OrderCreatedEvent.Builder other) {
    return new ionutbalosin.training.ecommerce.order.schema.OrderCreatedEvent.Builder(other);
  }

  /**
   * Creates a new OrderCreatedEvent RecordBuilder by copying an existing OrderCreatedEvent
   * instance.
   *
   * @param other The existing instance to copy.
   * @return A new OrderCreatedEvent RecordBuilder
   */
  public static ionutbalosin.training.ecommerce.order.schema.OrderCreatedEvent.Builder newBuilder(
      ionutbalosin.training.ecommerce.order.schema.OrderCreatedEvent other) {
    return new ionutbalosin.training.ecommerce.order.schema.OrderCreatedEvent.Builder(other);
  }

  /** RecordBuilder for OrderCreatedEvent instances. */
  public static class Builder
      extends org.apache.avro.specific.SpecificRecordBuilderBase<OrderCreatedEvent>
      implements org.apache.avro.data.RecordBuilder<OrderCreatedEvent> {

    private int userId;
    private int productId;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     *
     * @param other The existing Builder to copy.
     */
    private Builder(ionutbalosin.training.ecommerce.order.schema.OrderCreatedEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.userId)) {
        this.userId = data().deepCopy(fields()[0].schema(), other.userId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.productId)) {
        this.productId = data().deepCopy(fields()[1].schema(), other.productId);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing OrderCreatedEvent instance
     *
     * @param other The existing instance to copy.
     */
    private Builder(ionutbalosin.training.ecommerce.order.schema.OrderCreatedEvent other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.userId)) {
        this.userId = data().deepCopy(fields()[0].schema(), other.userId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.productId)) {
        this.productId = data().deepCopy(fields()[1].schema(), other.productId);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Gets the value of the 'userId' field.
     *
     * @return The value.
     */
    public java.lang.Integer getUserId() {
      return userId;
    }

    /**
     * Sets the value of the 'userId' field.
     *
     * @param value The value of 'userId'.
     * @return This builder.
     */
    public ionutbalosin.training.ecommerce.order.schema.OrderCreatedEvent.Builder setUserId(
        int value) {
      validate(fields()[0], value);
      this.userId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
     * Checks whether the 'userId' field has been set.
     *
     * @return True if the 'userId' field has been set, false otherwise.
     */
    public boolean hasUserId() {
      return fieldSetFlags()[0];
    }

    /**
     * Clears the value of the 'userId' field.
     *
     * @return This builder.
     */
    public ionutbalosin.training.ecommerce.order.schema.OrderCreatedEvent.Builder clearUserId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
     * Gets the value of the 'productId' field.
     *
     * @return The value.
     */
    public java.lang.Integer getProductId() {
      return productId;
    }

    /**
     * Sets the value of the 'productId' field.
     *
     * @param value The value of 'productId'.
     * @return This builder.
     */
    public ionutbalosin.training.ecommerce.order.schema.OrderCreatedEvent.Builder setProductId(
        int value) {
      validate(fields()[1], value);
      this.productId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
     * Checks whether the 'productId' field has been set.
     *
     * @return True if the 'productId' field has been set, false otherwise.
     */
    public boolean hasProductId() {
      return fieldSetFlags()[1];
    }

    /**
     * Clears the value of the 'productId' field.
     *
     * @return This builder.
     */
    public ionutbalosin.training.ecommerce.order.schema.OrderCreatedEvent.Builder clearProductId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OrderCreatedEvent build() {
      try {
        OrderCreatedEvent record = new OrderCreatedEvent();
        record.userId =
            fieldSetFlags()[0] ? this.userId : (java.lang.Integer) defaultValue(fields()[0]);
        record.productId =
            fieldSetFlags()[1] ? this.productId : (java.lang.Integer) defaultValue(fields()[1]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OrderCreatedEvent> WRITER$ =
      (org.apache.avro.io.DatumWriter<OrderCreatedEvent>) MODEL$.createDatumWriter(SCHEMA$);

  @Override
  public void writeExternal(java.io.ObjectOutput out) throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OrderCreatedEvent> READER$ =
      (org.apache.avro.io.DatumReader<OrderCreatedEvent>) MODEL$.createDatumReader(SCHEMA$);

  @Override
  public void readExternal(java.io.ObjectInput in) throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }
}
